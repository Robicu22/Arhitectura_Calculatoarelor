CHIP ALU {
    IN x[16], y[16],
       zx, nx, zy, ny, f, no;  // control bits
    OUT out[16],
        zr, ng;                // status bits

    PARTS:
    // Preprocess x
    Not16(in=x, out=notX);
    Mux16(a=x, b=notX, sel=nx, out=preX);
    Mux16(a=false, b=preX, sel=zx, out=x1);

    // Preprocess y
    Not16(in=y, out=notY);
    Mux16(a=y, b=notY, sel=ny, out=preY);
    Mux16(a=false, b=preY, sel=zy, out=y1);

    // Function f: 0 = And, 1 = Add
    And16(a=x1, b=y1, out=andXY);
    Add16(a=x1, b=y1, out=addXY);
    Mux16(a=andXY, b=addXY, sel=f, out=fOut);

    // Optional negate output
    Not16(in=fOut, out=notOut);
    Mux16(a=fOut, b=notOut, sel=no, out=out);

    // Status bits
    Or8Way(in=out[0..7], out=orLow);
    Or8Way(in=out[8..15], out=orHigh);
    Or(a=orLow, b=orHigh, out=nonZero);
    Not(in=nonZero, out=zr);
    And(a=out[15], b=true, out=ng);
}
